local wk = require("which-key")
wk.register({
  ["<leader>"] = {
    G = {
      name = "GitHub (octo)",
      a = "assignee",
      c = "comment",
      i = "issue",
      l = "label",
      s = "suggestion",
      p = {
        name = "pr",
        p = "sensible",
      },
      r = "react",
      v = "reviewer",
      w = "review",
    },
  },
})

return {
  {
    "pwntester/octo.nvim",
    lazy = true,
    dependencies = {
      "nvim-lua/plenary.nvim",
      "nvim-telescope/telescope.nvim",
      "nvim-tree/nvim-web-devicons",
      "petertriho/cmp-git",
    },
    opts = {
      mappings = {
        issue = {
          close_issue = { lhs = "<leader>Gic", desc = "close issue" },
          reopen_issue = { lhs = "<leader>Gio", desc = "reopen issue" },
          list_issues = { lhs = "<leader>Gil", desc = "list open issues on same repo" },
          reload = { lhs = "<C-r>", desc = "reload issue" },
          open_in_browser = { lhs = "<C-b>", desc = "open issue in browser" },
          copy_url = { lhs = "<C-y>", desc = "copy url to system clipboard" },
          add_assignee = { lhs = "<leader>Gaa", desc = "add assignee" },
          remove_assignee = { lhs = "<leader>Gad", desc = "remove assignee" },
          create_label = { lhs = "<leader>Glc", desc = "create label" },
          add_label = { lhs = "<leader>Gla", desc = "add label" },
          remove_label = { lhs = "<leader>Gld", desc = "remove label" },
          goto_issue = { lhs = "<leader>Gig", desc = "navigate to a local repo issue" },
          add_comment = { lhs = "<leader>Gca", desc = "add comment" },
          delete_comment = { lhs = "<leader>Gcd", desc = "delete comment" },
          next_comment = { lhs = "]c", desc = "go to next comment" },
          prev_comment = { lhs = "[c", desc = "go to previous comment" },
          react_hooray = { lhs = "<leader>Grp", desc = "add/remove üéâ reaction" },
          react_heart = { lhs = "<leader>Grh", desc = "add/remove ‚ù§Ô∏è reaction" },
          react_eyes = { lhs = "<leader>Gre", desc = "add/remove üëÄ reaction" },
          react_thumbs_up = { lhs = "<leader>Gr+", desc = "add/remove üëç reaction" },
          react_thumbs_down = { lhs = "<leader>Gr-", desc = "add/remove üëé reaction" },
          react_rocket = { lhs = "<leader>Grr", desc = "add/remove üöÄ reaction" },
          react_laugh = { lhs = "<leader>Grl", desc = "add/remove üòÑ reaction" },
          react_confused = { lhs = "<leader>Grc", desc = "add/remove üòï reaction" },
        },
        pull_request = {
          checkout_pr = { lhs = "<leader>Gpo", desc = "checkout PR" },
          merge_pr = { lhs = "<leader>Gppm", desc = "merge commit PR" },
          squash_and_merge_pr = { lhs = "<leader>Gpps", desc = "squash and merge PR" },
          rebase_and_merge_pr = { lhs = "<leader>GppR", desc = "rebase and merge PR" },
          list_commits = { lhs = "<leader>Gpc", desc = "list PR commits" },
          list_changed_files = { lhs = "<leader>Gpf", desc = "list PR changed files" },
          show_pr_diff = { lhs = "<leader>Gpd", desc = "show PR diff" },
          add_reviewer = { lhs = "<leader>Gva", desc = "add reviewer" },
          remove_reviewer = { lhs = "<leader>Gvd", desc = "remove reviewer request" },
          close_issue = { lhs = "<leader>Gppc", desc = "close PR" },
          reopen_issue = { lhs = "<leader>Gppr", desc = "reopen PR" },
          list_issues = { lhs = "<leader>Gil", desc = "list open issues on same repo" },
          reload = { lhs = "<C-r>", desc = "reload PR" },
          open_in_browser = { lhs = "<C-b>", desc = "open PR in browser" },
          copy_url = { lhs = "<C-y>", desc = "copy url to system clipboard" },
          goto_file = { lhs = "gf", desc = "go to file" },
          add_assignee = { lhs = "<leader>Gaa", desc = "add assignee" },
          remove_assignee = { lhs = "<leader>Gad", desc = "remove assignee" },
          create_label = { lhs = "<leader>Glc", desc = "create label" },
          add_label = { lhs = "<leader>Gla", desc = "add label" },
          remove_label = { lhs = "<leader>Gld", desc = "remove label" },
          goto_issue = { lhs = "<leader>Gig", desc = "navigate to a local repo issue" },
          add_comment = { lhs = "<leader>Gca", desc = "add comment" },
          delete_comment = { lhs = "<leader>Gcd", desc = "delete comment" },
          next_comment = { lhs = "]c", desc = "go to next comment" },
          prev_comment = { lhs = "[c", desc = "go to previous comment" },
          react_hooray = { lhs = "<leader>Grp", desc = "add/remove üéâ reaction" },
          react_heart = { lhs = "<leader>Grh", desc = "add/remove ‚ù§Ô∏è reaction" },
          react_eyes = { lhs = "<leader>Gre", desc = "add/remove üëÄ reaction" },
          react_thumbs_up = { lhs = "<leader>Gr+", desc = "add/remove üëç reaction" },
          react_thumbs_down = { lhs = "<leader>Gr-", desc = "add/remove üëé reaction" },
          react_rocket = { lhs = "<leader>Grr", desc = "add/remove üöÄ reaction" },
          react_laugh = { lhs = "<leader>Grl", desc = "add/remove üòÑ reaction" },
          react_confused = { lhs = "<leader>Grc", desc = "add/remove üòï reaction" },
          review_start = { lhs = "<leader>Gws", desc = "start a review for the current PR" },
          review_resume = { lhs = "<leader>Gwr", desc = "resume a pending review for the current PR" },
        },
        review_thread = {
          goto_issue = { lhs = "<leader>Gig", desc = "navigate to a local repo issue" },
          add_comment = { lhs = "<leader>Gca", desc = "add comment" },
          add_suggestion = { lhs = "<leader>Gsa", desc = "add suggestion" },
          delete_comment = { lhs = "<leader>Gcd", desc = "delete comment" },
          next_comment = { lhs = "]c", desc = "go to next comment" },
          prev_comment = { lhs = "[c", desc = "go to previous comment" },
          select_next_entry = { lhs = "]q", desc = "move to previous changed file" },
          select_prev_entry = { lhs = "[q", desc = "move to next changed file" },
          select_first_entry = { lhs = "[Q", desc = "move to first changed file" },
          select_last_entry = { lhs = "]Q", desc = "move to last changed file" },
          close_review_tab = { lhs = "<ESC>", desc = "close review tab" },
          react_hooray = { lhs = "<leader>Grp", desc = "add/remove üéâ reaction" },
          react_heart = { lhs = "<leader>Grh", desc = "add/remove ‚ù§Ô∏è reaction" },
          react_eyes = { lhs = "<leader>Gre", desc = "add/remove üëÄ reaction" },
          react_thumbs_up = { lhs = "<leader>Gr+", desc = "add/remove üëç reaction" },
          react_thumbs_down = { lhs = "<leader>Gr-", desc = "add/remove üëé reaction" },
          react_rocket = { lhs = "<leader>Grr", desc = "add/remove üöÄ reaction" },
          react_laugh = { lhs = "<leader>Grl", desc = "add/remove üòÑ reaction" },
          react_confused = { lhs = "<leader>Grc", desc = "add/remove üòï reaction" },
        },
        submit_win = {
          approve_review = { lhs = "<leader>Gwa", desc = "approve review" },
          comment_review = { lhs = "<leader>Gwt", desc = "comment review" },
          request_changes = { lhs = "<leader>Gwr", desc = "request changes review" },
          close_review_tab = { lhs = "<ESC>", desc = "close review tab" },
        },
        review_diff = {
          submit_review = { lhs = "<leader>GwS", desc = "submit review" },
          discard_review = { lhs = "<leader>Gwd", desc = "discard review" },
          add_review_comment = { lhs = "<leader>Gca", desc = "add a new review comment" },
          add_review_suggestion = { lhs = "<leader>Gsa", desc = "add a new review suggestion" },
          focus_files = { lhs = "<leader>Ge", desc = "move focus to changed file panel" },
          toggle_files = { lhs = "<leader>Gb", desc = "hide/show changed files panel" },
          next_thread = { lhs = "]t", desc = "move to next thread" },
          prev_thread = { lhs = "[t", desc = "move to previous thread" },
          select_next_entry = { lhs = "]q", desc = "move to previous changed file" },
          select_prev_entry = { lhs = "[q", desc = "move to next changed file" },
          select_first_entry = { lhs = "[Q", desc = "move to first changed file" },
          select_last_entry = { lhs = "]Q", desc = "move to last changed file" },
          close_review_tab = { lhs = "<ESC>", desc = "close review tab" },
          toggle_viewed = { lhs = "<leader>Gp<space>", desc = "toggle viewer viewed state" },
          goto_file = { lhs = "gf", desc = "go to file" },
        },
        file_panel = {
          submit_review = { lhs = "<leader>GwS", desc = "submit review" },
          discard_review = { lhs = "<leader>Gwd", desc = "discard review" },
          next_entry = { lhs = "j", desc = "move to next changed file" },
          prev_entry = { lhs = "k", desc = "move to previous changed file" },
          select_entry = { lhs = "<cr>", desc = "show selected changed file diffs" },
          refresh_files = { lhs = "R", desc = "refresh changed files panel" },
          focus_files = { lhs = "<leader>Ge", desc = "move focus to changed file panel" },
          toggle_files = { lhs = "<leader>Gb", desc = "hide/show changed files panel" },
          select_next_entry = { lhs = "]q", desc = "move to previous changed file" },
          select_prev_entry = { lhs = "[q", desc = "move to next changed file" },
          select_first_entry = { lhs = "[Q", desc = "move to first changed file" },
          select_last_entry = { lhs = "]Q", desc = "move to last changed file" },
          close_review_tab = { lhs = "<ESC>", desc = "close review tab" },
          toggle_viewed = { lhs = "<leader>Gp<space>", desc = "toggle viewed state" },
        },
      },
    },
    keys = {
      -- Helpers
      { "<leader>Gm", "<cmd>Octo search assignee:@me is:pr is:open<CR>", desc = "My PRs" },
      {
        "<leader>Gt",
        "<cmd>Octo search review-requested:@me is:pr is:open draft:false<CR>",
        desc = "PRs to review",
      },
      -- Lists
      { "<leader>Gh", "<cmd>Octo actions<CR>", desc = "list actions" },
      { "<leader>Go", "<cmd>Octo pr list<CR>", desc = "list PRs" },
      -- Pull requests
      { "<leader>GpC", "<cmd>Octo pr checks<CR>", desc = "show checks" },
      -- Review
      { "<leader>Gwq", "<cmd>Octo review close<CR>", desc = "close review" },
      {
        "<leader>G<space>",
        function()
          local octo_mappings = require("octo.mappings")
          octo_mappings.toggle_viewed()
          octo_mappings.select_next_entry()
        end,
        desc = "toggle viewed and go to next file",
      },
    },
  },
  {
    "petertriho/cmp-git",
    lazy = true,
    dependencies = {
      "nvim-lua/plenary.nvim",
      "nvim-cmp",
    },
    config = true,
  },
  {
    "nvim-cmp",
    opts = function(_, opts)
      table.insert(opts.sources, { name = "git" })
    end,
  },
}
